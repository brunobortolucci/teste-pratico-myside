name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  integration-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configurando Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Instalando Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Iniciando Docker Compose
        run: |
          docker-compose -f docker-compose-test.yml up -d --build
          docker ps

      - name: Aguardando aplicação iniciar
        run: |
          timeout=60
          counter=0
          until curl -s http://localhost:8000/docs > /dev/null; do
            if [ $counter -eq $timeout ]; then
              echo "Aplicação não iniciou em $timeout segundos"
              exit 1
            fi
            echo "Aguardando aplicação iniciar..."
            sleep 1
            counter=$((counter + 1))
          done

      - name: Instalar dependências do teste
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl
          pip install -r requirements.txt

      - name: Executando Testes de Integração
        run: |
          response=$(curl -s -X POST http://localhost:8000/auth/register \
            -H "Content-Type: application/json" \
            -d '{"username":"testuser","password":"testpass123"}')
          echo "Register response: $response"

          token=$(curl -s -X POST http://localhost:8000/auth/token \
            -H "Content-Type: application/json" \
            -d '{"username":"testuser","password":"testpass123"}" | jq -r '.access_token')
          echo "Token obtained successfully"

          room_response=$(curl -s -X POST http://localhost:8000/rooms/ \
            -H "Content-Type: application/json" \
            -d '{"name":"Sala Teste","capacity":10,"location":"Andar 1"}')
          room_id=$(echo $room_response | jq -r '.id')
          echo "Room created with ID: $room_id"

          reservation_response=$(curl -s -X POST http://localhost:8000/reservations/ \
            -H "Authorization: Bearer $token" \
            -H "Content-Type: application/json" \
            -d "{\"room_id\":\"$room_id\",\"start_time\":\"2025-02-10T14:00:00\",\"end_time\":\"2025-02-10T15:00:00\"}")
          echo "Reservation response: $reservation_response"

          availability_response=$(curl -s -X GET "http://localhost:8000/rooms/$room_id/availability?start_time=2025-02-10T16:00:00&end_time=2025-02-10T17:00:00")
          echo "Availability response: $availability_response"

          reservations_response=$(curl -s -X GET "http://localhost:8000/rooms/$room_id/reservations")
          echo "Reservations list response: $reservations_response"

      - name: Checando logs
        if: always()
        run: |
          echo "Docker Compose Logs:"
          docker-compose logs

      - name: Limpando ambiente
        if: always()
        run: |
          docker-compose down -v
          docker system prune -af